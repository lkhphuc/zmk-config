/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    combos {
        compatible = "zmk,combos";

        del {
            bindings = <&kp DEL>;
            key-positions = <34 33>;
        };

        bsp {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 10>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <21 22>;
        };

        bracket1 {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <31 32>;
        };

        bracket2 {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <32 33>;
        };

        paren1 {
            bindings = <&kp LPAR>;
            key-positions = <19 20>;
        };

        paren2 {
            bindings = <&kp RPAR>;
            key-positions = <20 21>;
        };

        brace1 {
            bindings = <&kp LBRC>;
            key-positions = <8 7>;
        };

        brace2 {
            bindings = <&kp RBRC>;
            key-positions = <8 9>;
        };

        and {
            bindings = <&kp AMPERSAND>;
            key-positions = <21 9>;
        };

        or {
            bindings = <&kp PIPE>;
            key-positions = <33 21>;
        };

        mult {
            bindings = <&kp ASTRK>;
            key-positions = <20 8>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <32 20>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <19 7>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <31 19>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <6 18>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <30 18>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <14 15>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <4 16>;
        };

        percent {
            bindings = <&kp PERCENT>;
            key-positions = <17 5>;
        };

        bslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <15 27>;
        };

        at {
            bindings = <&kp AT>;
            key-positions = <14 2>;
        };

        btick {
            bindings = <&kp GRAVE>;
            key-positions = <26 14>;
        };

        pound {
            bindings = <&kp POUND>;
            key-positions = <15 3>;
        };

        stab {
            bindings = <&kp LS(TAB)>;
            key-positions = <13 14>;
        };

        exclamation {
            bindings = <&kp EXCL>;
            key-positions = <1 13>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <17 29>;
        };

        ctrlZ {
            bindings = <&kp C_REPEAT>;
            key-positions = <25 26>;
        };

        question {
            bindings = <&kp QUESTION>;
            key-positions = <28 16>;
        };

        equal1 {
            bindings = <&kp EQUAL>;
            key-positions = <16 15>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            /* Layer 0: Base keys
 *
 * ,-----.-----.-----.-----.-----.                      ,-----.-----.-----.-----.-----.
 * | Q   | W   | E   | R   | T   |                      | Y   | U   | I   | O   | P   |
 * |-----+-----+-----+-----+-----|                      |-----+-----+-----+-----+-----|
 * | A   | S   | D   | F   | G   |                      | H   | J   | K   | L   | ' " | 
 * |-----+-----+-----+-----+-----+                      |-----+-----+-----+-----+-----|
 * |SHF/Z| X   | C   | V   | B   |                      | N   | M   | < , | > . |SHF/?|
 * `-----'-----'-----'-----'-----'                      `-----'-----'-----'-----'-----'
 *               .-------.-------.-------.      .-------.-------.-------.   
 *               |OPT/ESC|  CMD  |CTR/TAB|      | ENTER |L1/SPC |L2/BSP |
 *               '-------'-------'-------'      '-------'-------'-------' 
 */

            bindings = <
   &kp TAB        &kp Q  &kp W            &kp E             &kp R                &kp T                        &kp Y        &kp U            &kp I    &kp O            &kp P  &kp BSLH
   &kp ESC        &kp A  &kp S            &kp D             &kp F                &kp G                        &kp H        &kp J            &kp K    &kp L          &kp SQT  &kp SEMI
&kp LSHIFT  &mt LSHFT Z  &kp X            &kp C             &kp V                &kp B                        &kp N        &kp M        &kp COMMA  &kp DOT  &mt RSHIFT FSLH  &kp CAPS
                                &mt LCTRL COLON  &mt LEFT_ALT TAB  &mt LEFT_GUI ESCAPE    &mt RS(RA(RG(RCTRL))) RET  &lt 1 SPACE  &lt 2 BACKSPACE
            >;
        };

        num_sym {
            // -----------------------------------------------------------------------------------------
            /* Layer 1: Symbols
 * ,-----.-----.-----.-----.-----.                      ,-----.-----.-----.-----.-----.
 * | 1!  | 2@  | 3#  | 4$  | 5%  |                      | 6^  | 7&  | 8*  | 9(  | 0)  |
 * |-----+-----+-----+-----+-----|                      |-----+-----+-----+-----+-----|
 * | `~  |HOME |PGUP |PGDN | END |                      |LEFT |DOWN | UP  |RGHT | ;:  |
 * |-----+-----+-----+-----+-----+                      |-----+-----+-----+-----+-----|
 * |SHFT |     |     |     |     |                      | -_  | =+  | [{  | ]}  |SHF\||
 * `-----'-----'-----'-----'-----'                      `-----'-----'-----'-----'-----'
 *               .-------.-------.-------.      .-------.-------.-------.   
 *               |       |       |       |      |       |(hold) |       |
 *               '-------'-------'-------'      '-------'-------'-------' 
 */

            bindings = <
&trans     &kp N1    &kp N2     &kp N3     &kp N4    &kp N5       &kp N6     &kp N7    &kp N8     &kp N9               &kp N0    &trans
&trans  &kp GRAVE  &kp HOME  &kp PG_UP  &kp PG_DN   &kp END     &kp LEFT   &kp DOWN    &kp UP  &kp RIGHT             &kp SEMI    &trans
&trans  &kp LSHFT  &kp AMPS   &kp STAR   &kp LPAR  &kp RPAR    &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &mt RSHFT BACKSLASH  &kp LGUI
                                &trans     &trans    &trans       &trans     &trans
            >;
        };

        Functions {
            /* Layer 2: Function keys
* ,-----.-----.-----.-----.-----.                      ,-----.-----.-----.-----.-----.
* | F1  | F2  | F3  | F4  | F5  |                      | F6  | F7  | F8  | F9  | F10 |
* |-----+-----+-----+-----+-----|                      |-----+-----+-----+-----+-----|
* | F11 | F12 |PREV |PLAY |NEXT |                      |MUTE |Vol- |Vol+ | Br- | Br+ |
* |-----+-----+-----+-----+-----+                      |-----+-----+-----+-----+-----|
* |     |     |     |     |     |                      |     |     |     |     |     |
* `-----'-----'-----'-----'-----'                      `-----'-----'-----'-----'-----'
*               .-------.-------.-------.      .-------.-------.-------.   
*               |       |       |       |      |       |       |(hold) |
*               '-----------------------'      '-------'-------'-------' 
*/

            bindings = <
   &kp TAB        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                  &kp F6                 &kp F7         &kp F8            &kp F9       &kp F10  &kp BSPC
 &kp LCTRL       &kp F11       &kp F12    &bt BT_PRV    &bt BT_NXT    &bt BT_CLR    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS       &kp LBKT          &kp RBKT     &kp COLON    &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4               &kp UNDER               &kp PLUS  &kp LESS_THAN  &kp GREATER_THAN  &kp QUESTION    &trans
                                              &trans        &trans        &trans                  &trans                 &trans         &trans
            >;
        };
    };
};
